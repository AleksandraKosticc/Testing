{
	"info": {
		"_postman_id": "79e67885-2c61-4b49-abbd-bccd59cb4c6a",
		"name": "Aleksandra_Kostic",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET ALL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get all test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\tconst responseJson = pm.response.json();\r",
							"\tpm.expect(responseJson.length).to.equal(0);\r",
							"\t\t\t\t\t\t\t\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\t\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson.name).to.eql('Aleksandra');\r",
							"\tpm.expect(responseJson.name).to.be.a('string');\r",
							"    pm.expect(responseJson.name).to.eql('aleksandra.kostic@gmail.com');\r",
							"\tpm.expect(responseJson.name).to.be.a('string');\r",
							"    pm.expect(responseJson.name).to.eql('BCA');\r",
							"\tpm.expect(responseJson.name).to.be.a('string');\r",
							"\t\t\t\t\t\t\t\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{   \r\n        \"studentName\": \"Aleksandra\",\r\n        \"studentEmail\": \"aleksandra.kostic@gmail.com\",\r\n        \"studentBranch\": \"BCA\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get 1 test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\t\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.name).to.eql('Aleksandra');\r",
							"\tpm.expect(responseJson.name).to.be.a('string');\r",
							"    pm.expect(responseJson.name).to.eql('aleksandra.kostic@gmail.com');\r",
							"\tpm.expect(responseJson.name).to.be.a('string');\r",
							"    pm.expect(responseJson.name).to.eql('BCA');\r",
							"\tpm.expect(responseJson.name).to.be.a('string');\r",
							"\t\t\t\t\t\t\t\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Put test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\t\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.name).to.eql('Marko');\r",
							"\tpm.expect(responseJson.name).to.be.a('string');\r",
							"    pm.expect(responseJson.name).to.eql('marko.markovic@gmail.com');\r",
							"\tpm.expect(responseJson.name).to.be.a('string');\r",
							"    pm.expect(responseJson.name).to.eql('M-Tech');\r",
							"\tpm.expect(responseJson.name).to.be.a('string');\r",
							"\t\t\t\t\t\t\t\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"studentName\": \"Marko\",\r\n        \"studentEmail\": \"marko.markovic@gmail.com\",\r\n        \"studentBranch\": \"M-Tech\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get 2 test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\t\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.name).to.eql('Marko');\r",
							"\tpm.expect(responseJson.name).to.be.a('string');\r",
							"    pm.expect(responseJson.name).to.eql('marko.markovic@gmail.com');\r",
							"\tpm.expect(responseJson.name).to.be.a('string');\r",
							"    pm.expect(responseJson.name).to.eql('M-Tech');\r",
							"\tpm.expect(responseJson.name).to.be.a('string');\r",
							"\t\t\t\t\t\t\t\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"studentName\": \"Marko\",\r\n        \"studentEmail\": \"marko.markovic@gmail.com\",\r\n        \"studentBranch\": \"M-Tech\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get after delete test\", function(){\r",
							"    pm.response.to.have.status(404);\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE WITHOUT ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete without id test\", function(){\r",
							"    pm.response.to.have.status(404);\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"studentId\": 1,\r\n        \"studentName\": \"Marko\",\r\n        \"studentEmail\": \"marko.markovic@gmail.com\",\r\n        \"studentBranch\": \"M-Tech\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/book/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"book",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT WITHOUT ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Put without id test\", function(){\r",
							"    pm.response.to.have.status(404);\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"studentName\": \"Markoo\",\r\n        \"studentEmail\": \"marko.markovic@gmail.com\",\r\n        \"studentBranch\": \"M-Tech\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add 1 test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"studentName\": \"Aleksandra\",\r\n        \"studentEmail\": \"aleksandra.kostic@gmail.com\",\r\n        \"studentBranch\": \"BCA\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add 2 test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"studentName\": \"Ana\",\r\n        \"studentEmail\": \"ana.ivanovic@gmail.com\",\r\n        \"studentBranch\": \"MCA\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET AFTER ADDED TWO",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get all test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.length).to.equal(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		}
	]
}